<?php

namespace MehdiBundle\Repository;

/**
 * ProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends \Doctrine\ORM\EntityRepository
{
    public function byCategorie($categorie)
    {
        $qb = $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.categorie = :categorie')
            ->orderBy(('u.id'))
            ->setParameter('categorie', $categorie);
        return $qb->getQuery()->getResult();
    }


    public function findProduitDQL($serie)
    {
        return $this->createQueryBuilder('e')
            ->andWhere('e.nomProduit LIKE :nom')
            ->setParameter('nom','%'.$serie.'%')
            ->getQuery()
            ->getResult();
    }

    /*public function findProduitDQL($serie)
    {
        $query=$this->getEntityManager()
            ->createQuery("Select p from MehdiBundle:Produit p 
              where p.nomProduit =:serie")
            ->setParameter('serie',$serie);
        return $query->getResult();
    }*/

    public function findArray($array)
    {
        $qb = $this->createQueryBuilder('u')
            ->Select('u')
            ->Where('u.id IN (:array)')
            ->setParameter('array', $array);
        return $qb->getQuery()->getResult();
    }
    public function findProduitRating()
    {
        $query=$this->getEntityManager()
            ->createQuery("Select p from MehdiBundle:Produit p 
              ORDER BY p.rating DESC ")
        ->setMaxResults(5);

        return $query->getResult();
    }
    public function findProduitPrix($minprix,$maxprix)
    {
        $query=$this->getEntityManager()
            ->createQuery("Select p from MehdiBundle:Produit p 
            ->WHERE (p.prix BETWEEN  .p)
              ORDER BY p.rating DESC ")
            ->setParameter('array', $maxprix,$minprix);
        return $query->getResult();
    }

    public function findProduitSolde()
    {
        $query=$this->getEntityManager()
            ->createQuery("Select p from MehdiBundle:Produit p 
              WHERE (p.solde >0)
              ORDER BY p.solde DESC ")
            ->setMaxResults(5);

        return $query->getResult();
    }
}