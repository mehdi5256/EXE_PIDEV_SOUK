<?php

namespace EvenementBundle\Repository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends \Doctrine\ORM\EntityRepository
{
    public function findDqlLieuParametre($l)
    {
        $q=$this->getEntityManager()
            ->createQuery("select m FROM EvnementBundle:Event m WHERE m.lieu=:lieu  ")
            ->setParameter('lieu',$l);
        return $q->getResult();

    }
    public function findavenir()
    {
        $query = $this->getEntityManager()->createQuery("SELECT p FROM EvenementBundle:Event p WHERE p.dateDeb > CURRENT_DATE () ");
        return $query->getResult();
    }
    public function findfini()
    {
        $query = $this->getEntityManager()->createQuery("SELECT p FROM EvenementBundle:Event p WHERE p.dateDeb< CURRENT_DATE () ");
        return $query->getResult();
}
    public function findeventsemaine()
    {
        $query = $this->getEntityManager()->createQuery("SELECT p FROM EvenementBundle:Event p WHERE p.dateDeb BETWEEN CURRENT_DATE () AND (CURRENT_DATE ()+7) ");
        return $query->getResult();
    }

    public function deleteEvent()
    {
        $query = $this->getEntityManager()->createQuery("DELETE p FROM EvenementBundle:Event p WHERE p.dateFin < CURRENT_DATE ()");
        return $query->getResult();
    }
    public function findbestEvent()
    {
        $query = $this->getEntityManager()->createQuery("SELECT p FROM EvenementBundle:Event p WHERE strtodate(p.datedeb, '%d-%m-%Y %h:%i')>= CURRENT_DATE() order by   p.particiate  DESC ");
        return $query->getResult();
    }
    public function findAjax($search)
    {
        /*$date_from = new \DateTime('now');
        ->setParameter('date_from', $date_from)
        ->andWhere('e.datedeb > = :date_form')*/

        return $this->createQueryBuilder('e')
            ->andWhere('e.nom LIKE :nom')
            ->setParameter('nom','%'.$search.'%')
            ->getQuery()
            ->getResult();
    }
}
